import{T as v}from"./TextStyle-d575cad1.js";import{_ as y,af as w,l as S,m as x,p as t,q as e,B as b,aA as u,x as a,b6 as m}from"./index-e1a7a787.js";import{V as r}from"./VCol-9c9d795e.js";import{d as s,e as f,f as g,g as h,h as V}from"./VisualizationBuilder-fc150169.js";import{V as p}from"./VSwitch-e2ee2715.js";import{V as L}from"./VContainer-de4a4c64.js";const I={props:{chartSubType:String,option:Object},data(){return{settings:{type:"pie",colorBy:"data",selectedMode:"single",selectedOffset:20,startAngle:90,minAngle:"",minShowLabelAngle:"",roseType:"",avoidLabelOverlap:!0,stillShowZeroSum:!0,left:"",right:"",top:"",bottom:"",width:"",height:"",label:{show:!0,position:"outside",distanceToLabelLine:5},labelLine:{show:!0,length:15,length2:15},labelLayout:{draggable:!0},itemStyle:{},radius:["0%","75%"],tooltip:{trigger:"item"}},colorBy:["data","series"],selectedMode:[!1,"single","multiple","series"],roseTypes:["radius","area"],labelPosition:["outside","inside","inner","center"],innerRadius:0,outerRadius:75}},watch:{chartSubType(){this.chartSubType==="donut"?(this.settings.radius=["40%","70%"],this.settings.avoidLabelOverlap=!1,this.settings.label={show:!1,position:"center"},this.settings.emphasis={label:{show:!0,fontSize:"12",fontWeight:"bold"}},this.settings.labelLine.show=!1,this.settings.itemStyle={borderRadius:10,borderColor:"#fff",borderWidth:2}):(this.settings.radius=["0%","70%"],this.settings.avoidLabelOverlap=!0,this.settings.label={show:!0,position:"outside",distanceToLabelLine:5},delete this.settings.emphasis,this.settings.labelLine.show=!0,this.settings.itemStyle={})}},created(){if(this.chartSubType==="donut"&&(this.settings.radius=["40%","70%"],this.settings.avoidLabelOverlap=!1,this.settings.label={show:!1,position:"center"},this.settings.emphasis={label:{show:!0,fontSize:"12",fontWeight:"bold"}},this.settings.labelLine={show:!1},this.settings.itemStyle={borderRadius:10,borderColor:"#fff",borderWidth:2}),this.option.series&&this.option.series.length>0){const d=this.option.series.find(l=>l.type==="pie");for(const l in d)this.settings[l]&&(this.settings[l]=d[l])}this.innerRadius=this.settings.radius[0].replace("%",""),this.outerRadius=this.settings.radius[1].replace("%",""),this.updated()},methods:{LabelTextStyle(d){for(const l in d.value)this.settings.label[l]=d.value[l];this.updated()},updated(){this.$emit("chartSettings",this.settings)},radius(d){d==="inner"&&(this.innerRadius>100&&(this.innerRadius=100),this.innerRadius<0&&(this.innerRadius=0),this.settings.radius=[this.innerRadius+"%",this.outerRadius+"%"]),d==="outer"&&(this.outerRadius>100&&(this.outerRadius=100),this.outerRadius<0&&(this.outerRadius=0),this.settings.radius=[this.innerRadius+"%",this.outerRadius+"%"]),this.updated()}},components:{TextStyle:v}};function T(d,l,R,C,o,i){const c=w("TextStyle");return S(),x(L,{"grid-list-xs":""},{default:t(()=>[e(b,null,{default:t(()=>[e(r,{cols:"6"},{default:t(()=>[e(u,{type:"number",min:"0",max:"100",modelValue:o.innerRadius,"onUpdate:modelValue":l[0]||(l[0]=n=>o.innerRadius=n),label:"Inner Radius",onInput:l[1]||(l[1]=n=>i.radius("inner")),"append-icon":"mdi-percent"},{default:t(()=>[e(s,{activator:"parent",location:"bottom"},{default:t(()=>[a("Inner Radius of Pie chart")]),_:1})]),_:1},8,["modelValue"])]),_:1}),e(r,{cols:"6"},{default:t(()=>[e(u,{type:"number",min:"0",max:"100",modelValue:o.outerRadius,"onUpdate:modelValue":l[2]||(l[2]=n=>o.outerRadius=n),label:"Outer Radius",onInput:l[3]||(l[3]=n=>i.radius("outer")),"append-icon":"mdi-percent"},{default:t(()=>[e(s,{activator:"parent",location:"bottom"},{default:t(()=>[a("Outer Radius of Pie chart")]),_:1})]),_:1},8,["modelValue"])]),_:1})]),_:1}),e(m,{items:o.colorBy,modelValue:o.settings.colorBy,"onUpdate:modelValue":l[4]||(l[4]=n=>o.settings.colorBy=n),label:"Color By",onChange:i.updated},null,8,["items","modelValue","onChange"]),e(m,{items:o.selectedMode,modelValue:o.settings.selectedMode,"onUpdate:modelValue":l[5]||(l[5]=n=>o.settings.selectedMode=n),label:"Sector Selection Mode",onChange:i.updated},null,8,["items","modelValue","onChange"]),e(u,{modelValue:o.settings.selectedOffset,"onUpdate:modelValue":l[6]||(l[6]=n=>o.settings.selectedOffset=n),type:"number",label:"Offset Of Selected Sector",min:"-200",max:"200",onInput:i.updated},{default:t(()=>[e(s,{activator:"parent",location:"bottom"},{default:t(()=>[a("The offset distance of selected sector.")]),_:1})]),_:1},8,["modelValue","onInput"]),e(u,{modelValue:o.settings.startAngle,"onUpdate:modelValue":l[7]||(l[7]=n=>o.settings.startAngle=n),type:"number",label:"Start angle, ragenges [0, 360]",min:"0",max:"360",onInput:i.updated},null,8,["modelValue","onInput"]),e(u,{modelValue:o.settings.minAngle,"onUpdate:modelValue":l[8]||(l[8]=n=>o.settings.minAngle=n),type:"number",label:"Minimum Angle of Sector",min:"0",max:"360",onInput:i.updated},{default:t(()=>[e(s,{activator:"parent",location:"bottom"},{default:t(()=>[a("The minimum angle of sector (0 ~ 360). It prevents some sector from being too small when value is small, which will affect user interaction")]),_:1})]),_:1},8,["modelValue","onInput"]),e(u,{modelValue:o.settings.minShowLabelAngle,"onUpdate:modelValue":l[9]||(l[9]=n=>o.settings.minShowLabelAngle=n),type:"number",label:"Minimum Angle To Show Label",min:"0",max:"360",onInput:i.updated},{default:t(()=>[e(s,{activator:"parent",location:"bottom"},{default:t(()=>[a("If a sector is less than this angle (0 ~ 360), label and labelLine will not be displayed")]),_:1})]),_:1},8,["modelValue","onInput"]),e(m,{items:o.roseTypes,modelValue:o.settings.roseType,"onUpdate:modelValue":l[10]||(l[10]=n=>o.settings.roseType=n),label:"Rose Type",onChange:i.updated,clearable:""},{default:t(()=>[e(s,{activator:"parent",location:"bottom"},{default:t(()=>[a("Whether to show as Nightingale chart, which distinguishes data through radius")]),_:1})]),_:1},8,["items","modelValue","onChange"]),e(p,{color:"blue",label:"Avoid Label Overlap",modelValue:o.settings.avoidLabelOverlap,"onUpdate:modelValue":l[11]||(l[11]=n=>o.settings.avoidLabelOverlap=n),onChange:i.updated},{default:t(()=>[e(s,{activator:"parent",location:"bottom"},{default:t(()=>[a("Whether to enable the strategy to avoid labels overlap. Defaults to be enabled, which will move the label positions in the case of labels overlapping")]),_:1})]),_:1},8,["modelValue","onChange"]),e(p,{color:"blue",label:"Show Zero Sum",modelValue:o.settings.stillShowZeroSum,"onUpdate:modelValue":l[12]||(l[12]=n=>o.settings.stillShowZeroSum=n),onChange:i.updated},{default:t(()=>[e(s,{activator:"parent",location:"bottom"},{default:t(()=>[a("Whether to show sector when all data are zero.")]),_:1})]),_:1},8,["modelValue","onChange"]),e(u,{modelValue:o.settings.left,"onUpdate:modelValue":l[13]||(l[13]=n=>o.settings.left=n),type:"number",label:"Move from left by",min:"-1000",max:"1000",onInput:i.updated},{default:t(()=>[e(s,{activator:"parent",location:"bottom"},{default:t(()=>[a("Distance between pie chart component and the left side of the container")]),_:1})]),_:1},8,["modelValue","onInput"]),e(u,{modelValue:o.settings.right,"onUpdate:modelValue":l[14]||(l[14]=n=>o.settings.right=n),type:"number",label:"Move from right by",min:"-1000",max:"1000",onInput:i.updated},{default:t(()=>[e(s,{activator:"parent",location:"bottom"},{default:t(()=>[a("Distance between pie chart component and the right side of the container")]),_:1})]),_:1},8,["modelValue","onInput"]),e(u,{modelValue:o.settings.top,"onUpdate:modelValue":l[15]||(l[15]=n=>o.settings.top=n),type:"number",label:"Move from top by",min:"-1000",max:"1000",onInput:i.updated},{default:t(()=>[e(s,{activator:"parent",location:"bottom"},{default:t(()=>[a("Distance between pie chart component and the top side of the container")]),_:1})]),_:1},8,["modelValue","onInput"]),e(u,{modelValue:o.settings.bottom,"onUpdate:modelValue":l[16]||(l[16]=n=>o.settings.bottom=n),type:"number",label:"Move from bottom by",min:"-1000",max:"1000",onInput:i.updated},{default:t(()=>[e(s,{activator:"parent",location:"bottom"},{default:t(()=>[a("Distance between pie chart component and the bottom side of the container")]),_:1})]),_:1},8,["modelValue","onInput"]),e(u,{modelValue:o.settings.width,"onUpdate:modelValue":l[17]||(l[17]=n=>o.settings.width=n),type:"number",label:"Width of pie component",min:"-1000",max:"1000",onInput:i.updated},{default:t(()=>[e(s,{activator:"parent",location:"bottom"},{default:t(()=>[a("Width of pie chart component. Adaptive by default.")]),_:1})]),_:1},8,["modelValue","onInput"]),e(u,{modelValue:o.settings.height,"onUpdate:modelValue":l[18]||(l[18]=n=>o.settings.height=n),type:"number",label:"Height of pie component",min:"-1000",max:"1000",onInput:i.updated},{default:t(()=>[e(s,{activator:"parent",location:"bottom"},{default:t(()=>[a("Height of pie chart component. Adaptive by default.e")]),_:1})]),_:1},8,["modelValue","onInput"]),e(f,{multiple:"",focusable:""},{default:t(()=>[e(g,null,{default:t(()=>[e(h,null,{default:t(()=>[a("Labels")]),_:1}),e(V,null,{default:t(()=>[e(b,null,{default:t(()=>[e(r,{cols:"12"},{default:t(()=>[e(p,{color:"blue",label:"Show/Hide",modelValue:o.settings.label.show,"onUpdate:modelValue":l[19]||(l[19]=n=>o.settings.label.show=n),onChange:i.updated},{default:t(()=>[e(s,{activator:"parent",location:"bottom"},{default:t(()=>[a("Show or Hide labels")]),_:1})]),_:1},8,["modelValue","onChange"])]),_:1}),e(r,{cols:"12"},{default:t(()=>[e(m,{items:o.labelPosition,modelValue:o.settings.label.position,"onUpdate:modelValue":l[20]||(l[20]=n=>o.settings.label.position=n),label:"Position of label",onChange:i.updated},null,8,["items","modelValue","onChange"])]),_:1}),e(r,{cols:"12"},{default:t(()=>[e(u,{modelValue:o.settings.label.distanceToLabelLine,"onUpdate:modelValue":l[21]||(l[21]=n=>o.settings.label.distanceToLabelLine=n),type:"number",label:"Distance between label line and text",min:"0",max:"100",onInput:i.updated},{default:t(()=>[e(s,{activator:"parent",location:"bottom"},{default:t(()=>[a("Distance between label line and text")]),_:1})]),_:1},8,["modelValue","onInput"])]),_:1}),e(r,{cols:"12"},{default:t(()=>[e(c,{onTextStyle:i.LabelTextStyle,values:o.settings.label},null,8,["onTextStyle","values"])]),_:1})]),_:1})]),_:1})]),_:1}),e(s,{activator:"parent",location:"bottom"},{default:t(()=>[a("Settings about labels of a pie sectors")]),_:1})]),_:1}),e(f,{multiple:"",focusable:""},{default:t(()=>[e(g,null,{default:t(()=>[e(h,null,{default:t(()=>[a("Labels Lines")]),_:1}),e(V,null,{default:t(()=>[e(b,null,{default:t(()=>[e(r,{cols:"12"},{default:t(()=>[e(p,{color:"blue",label:"Show/Hide",modelValue:o.settings.labelLine.show,"onUpdate:modelValue":l[22]||(l[22]=n=>o.settings.labelLine.show=n),onChange:i.updated},{default:t(()=>[e(s,{activator:"parent",location:"bottom"},{default:t(()=>[a("Show or Hide label line")]),_:1})]),_:1},8,["modelValue","onChange"])]),_:1}),e(r,{cols:"12"},{default:t(()=>[e(u,{modelValue:o.settings.labelLine.length,"onUpdate:modelValue":l[23]||(l[23]=n=>o.settings.labelLine.length=n),type:"number",label:"Length of first segment",min:"0",max:"100",onInput:i.updated},{default:t(()=>[e(s,{activator:"parent",location:"bottom"},{default:t(()=>[a("The length of the first segment of guide line")]),_:1})]),_:1},8,["modelValue","onInput"])]),_:1}),e(r,{cols:"12"},{default:t(()=>[e(u,{modelValue:o.settings.labelLine.length2,"onUpdate:modelValue":l[24]||(l[24]=n=>o.settings.labelLine.length2=n),type:"number",label:"Length of second segment",min:"0",max:"100",onInput:i.updated},{default:t(()=>[e(s,{activator:"parent",location:"bottom"},{default:t(()=>[a("The length of the second segment of guide line")]),_:1})]),_:1},8,["modelValue","onInput"])]),_:1})]),_:1})]),_:1})]),_:1}),e(s,{activator:"parent",location:"bottom"},{default:t(()=>[a("Settings about lines of labels")]),_:1})]),_:1})]),_:1})}const B=y(I,[["render",T]]);export{B as default};
